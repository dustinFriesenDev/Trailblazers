plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.github.node-gradle.node" version "3.5.0"

}

group = 'com.liftoff'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()

}

node {
	download = false
	// identify working directory in project
	workDir = file("${project.projectDir}/src/main/frontend/nodejs")
	// NPM work directory
	npmWorkDir = file("${project.projectDir}/src/main/frontend/npm")
	// node modules directory
	nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}

task appNpmInstall(type: NpmTask){
	description = " read packge.json and install all jars"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args =["install", "debug"]
}
task appNpmBuild(type: NpmTask){
	description = "Builds applciation for your frontend "
	workingDir = file("${project.projectDir}/src/main/frontend")
	args =["run", "build"]
}

task copyToFrontend(type: Copy){
	from "$projectDir/src/main/frontend/build/"
	into "$buildDir/resources/main/static"
}

appNpmBuild.dependsOn appNpmInstall
copyToFrontend.dependsOn appNpmBuild
compileJava.dependsOn copyToFrontend

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'mysql:mysql-connector-java:8.0.28'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}